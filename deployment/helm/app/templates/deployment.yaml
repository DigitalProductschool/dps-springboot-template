---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "dps-template.name" . }}
  labels:
    app.kubernetes.io/name: {{ template "dps-template.name" . }}
    {{- include "dps-template.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicas }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ template "dps-template.name" . }}
      {{- include "dps-template.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ template "dps-template.name" . }}
        {{- include "dps-template.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
      - name: main
        securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        ports:
          - containerPort: 8080
        resources:
          requests:
            memory: "1024M"
            cpu: "250m"
          limits:
            memory: "1024M"
            cpu: "500m"
        livenessProbe:
            httpGet:
              path: "/actuator/health/liveness"
              port: 8082
            initialDelaySeconds: 180
            periodSeconds: 60
        readinessProbe:
          httpGet:
            path: "/actuator/health/readiness"
            port: 8082
          initialDelaySeconds: 90
          periodSeconds: 10
        {{- if or (.Values.db.enabled.crossplane.google) (.Values.db.enabled.crossplane.aws) (.Values.db.enabled.crossplane.azure) }}
        env: 
        - name: DB_ENDPOINT
          {{- if or (.Values.db.enabled.crossplane.aws) (.Values.db.enabled.crossplane.azure) (.Values.db.enabled.crossplane.google) }}
          valueFrom:
            secretKeyRef:
              name: {{ .Values.db.id }}
              key: endpoint
          {{- end }}
        - name: DB_PORT
          {{- if or (.Values.db.enabled.crossplane.aws) (.Values.db.enabled.crossplane.azure) (.Values.db.enabled.crossplane.google) }}
          valueFrom:
            secretKeyRef:
              name: {{ .Values.db.id }}
              key: port
          {{- end }}
        - name: DB_USER
          {{- if or (.Values.db.enabled.crossplane.aws) (.Values.db.enabled.crossplane.azure) (.Values.db.enabled.crossplane.google) }}
          valueFrom:
            secretKeyRef:
              name: {{ .Values.db.id }}
              key: username
          {{- end }}
        - name: DB_PASS
          valueFrom:
            secretKeyRef:
              {{- if or (.Values.db.enabled.crossplane.google) (.Values.db.enabled.crossplane.aws) (.Values.db.enabled.crossplane.azure) }}
              name: {{ .Values.db.id }}
              key: password
              {{- end }}
        - name: DB_NAME
          value: {{ .Values.db.id }}
        {{- end }}